{"version":3,"file":"src_components_workers_tessy_worker_ts.js","mappings":"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AAO;QAAEC,IAAI,EAAEJ,OAAR;QAAiBK,aAAa,EAAEJ;MAAhC,CAAP;IACD,CAXsC,CAavC;;;IACA,IAAMK,WAAW,GAAGZ,IAAI,CAACY,WAAzB;IACAA,WAAW,CAACR,CAAD,CAAX;EACD;AACF,CAlBD;;;;;;UCvEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;;;;WClCA;WACA;WACA;WACA;WACA,+BAA+B,wCAAwC;WACvE;WACA;WACA;WACA;WACA,iBAAiB,qBAAqB;WACtC;WACA;WACA,kBAAkB,qBAAqB;WACvC;WACA;WACA,KAAK;WACL;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;;;;;WC3BA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,EAAE;WACF;;;;;WCRA;WACA;WACA;WACA;WACA;;;;;WCJA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;WCNA;;;;;WCAA;;WAEA;WACA;WACA;WACA;WACA;;WAEA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA;WACA,aAAa;WACb;WACA;WACA;WACA;;WAEA;WACA;WACA;;WAEA;;WAEA;;;;;WCpCA;WACA;WACA;WACA;;;;;UEHA;UACA","sources":["webpack://PSE/webpack/universalModuleDefinition","webpack://PSE/./src/components/workers/tessy.worker.ts","webpack://PSE/webpack/bootstrap","webpack://PSE/webpack/runtime/chunk loaded","webpack://PSE/webpack/runtime/compat get default export","webpack://PSE/webpack/runtime/define property getters","webpack://PSE/webpack/runtime/ensure chunk","webpack://PSE/webpack/runtime/get javascript chunk filename","webpack://PSE/webpack/runtime/hasOwnProperty shorthand","webpack://PSE/webpack/runtime/make namespace object","webpack://PSE/webpack/runtime/publicPath","webpack://PSE/webpack/runtime/importScripts chunk loading","webpack://PSE/webpack/runtime/startup chunk dependencies","webpack://PSE/webpack/before-startup","webpack://PSE/webpack/startup","webpack://PSE/webpack/after-startup"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"PSE\"] = factory();\n\telse\n\t\troot[\"PSE\"] = factory();\n})(self, () => {\nreturn ","import * as concaveman from 'concaveman';\nimport * as libtess from 'libtess';\n\nconst tessy = (function initTesselator() {\n  // function called for each vertex of tesselator output\n  function vertexCallback(data, polyVertArray) {\n    // console.log(data[0], data[1]);\n    polyVertArray[polyVertArray.length] = data[0];\n    polyVertArray[polyVertArray.length] = data[1];\n  }\n  function begincallback(type) {\n    if (type !== libtess.primitiveType.GL_TRIANGLES) {\n      console.log(`expected TRIANGLES but got type: ${type}`);\n    }\n  }\n  function errorcallback(errno) {\n    console.log('error callback');\n    console.log(`error number: ${errno}`);\n  }\n  // callback for when segments intersect and must be split\n  function combinecallback(coords, data, weight) {\n    // console.log('combine callback');\n    return [coords[0], coords[1], coords[2]];\n  }\n  function edgeCallback(flag) {\n    // don't really care about the flag, but need no-strip/no-fan behavior\n    // console.log('edge flag: ' + flag);\n  }\n\n  const tessy = new libtess.GluTesselator();\n  // tessy.gluTessProperty(libtess.gluEnum.GLU_TESS_WINDING_RULE, libtess.windingRule.GLU_TESS_WINDING_POSITIVE);\n  tessy.gluTessCallback(libtess.gluEnum.GLU_TESS_VERTEX_DATA, vertexCallback);\n  tessy.gluTessCallback(libtess.gluEnum.GLU_TESS_BEGIN, begincallback);\n  tessy.gluTessCallback(libtess.gluEnum.GLU_TESS_ERROR, errorcallback);\n  tessy.gluTessCallback(libtess.gluEnum.GLU_TESS_COMBINE, combinecallback);\n  tessy.gluTessCallback(libtess.gluEnum.GLU_TESS_EDGE_FLAG, edgeCallback);\n\n  return tessy;\n})();\n\nfunction triangulate(contours) {\n  // libtess will take 3d verts and flatten to a plane for tesselation\n  // since only doing 2d tesselation here, provide z=1 normal to skip\n  // iterating over verts only to get the same answer.\n  // comment out to test normal-generation code\n  tessy.gluTessNormal(0, 0, 1);\n\n  const triangleVerts = [];\n  tessy.gluTessBeginPolygon(triangleVerts);\n\n  for (let i = 0; i < contours.length; i++) {\n    tessy.gluTessBeginContour();\n    const contour = contours[i];\n    for (let j = 0; j < contour.length; j += 2) {\n      const coords = [contour[j], contour[j + 1], 0];\n      tessy.gluTessVertex(coords, coords);\n    }\n    tessy.gluTessEndContour();\n  }\n\n  // finish polygon (and time triangulation process)\n  const startTime = new Date().getTime();\n  tessy.gluTessEndPolygon();\n  const endTime = new Date().getTime();\n\n  return triangleVerts;\n}\n\n/**\n * @param input a list of cluster vertices\n */\nself.addEventListener('message', function (e) {\n  if (e.data.messageType == 'triangulate') {\n    const Y = [];\n\n    for (let i = 0; i < e.data.input.length; i++) {\n      // Get hull of cluster\n      const polygon = concaveman(e.data.input[i]);\n\n      // Get triangulated hull for cluster\n      const triangulated = triangulate([polygon.flat()]);\n\n      Y.push({ hull: polygon, triangulation: triangulated });\n    }\n\n    // Get rid of typescript warning\n    const postMessage = self.postMessage as any;\n    postMessage(Y);\n  }\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [\"vendors-node_modules_concaveman_index_js-node_modules_libtess_libtess_min_js\"], () => (__webpack_require__(\"./src/components/workers/tessy.worker.ts\")))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".js\";\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"\";","// no baseURI\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t\"src_components_workers_tessy_worker_ts\": 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkPSE\"] = self[\"webpackChunkPSE\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn __webpack_require__.e(\"vendors-node_modules_concaveman_index_js-node_modules_libtess_libtess_min_js\").then(next);\n};","","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n",""],"names":["concaveman","libtess","tessy","initTesselator","vertexCallback","data","polyVertArray","length","begincallback","type","primitiveType","GL_TRIANGLES","console","log","errorcallback","errno","combinecallback","coords","weight","edgeCallback","flag","GluTesselator","gluTessCallback","gluEnum","GLU_TESS_VERTEX_DATA","GLU_TESS_BEGIN","GLU_TESS_ERROR","GLU_TESS_COMBINE","GLU_TESS_EDGE_FLAG","triangulate","contours","gluTessNormal","triangleVerts","gluTessBeginPolygon","i","gluTessBeginContour","contour","j","gluTessVertex","gluTessEndContour","startTime","Date","getTime","gluTessEndPolygon","endTime","self","addEventListener","e","messageType","Y","input","polygon","triangulated","flat","push","hull","triangulation","postMessage"],"sourceRoot":""}